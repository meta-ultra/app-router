const router = createRouter([{{#each routes}}{ 
  id: "{{this.id}}",
  {{~#unless (isNilorEmpty this.path)}}
  path: "{{this.path}}",{{/unless}}
  element: (<RootLayoutRouteElement
      {{~#unless (isNilorEmpty this.props.loading)}} loading={ {{~escape this.props.loading~}} }{{/unless}}
      {{~#unless (isNilorEmpty this.props.error)}} error={ {{~escape this.props.error~}} }{{/unless}}
      {{~#unless (isNilorEmpty this.props.notFound)}} notFound={ {{~escape this.props.notFound~}} }{{/unless}}
      {{~#unless (isNilorEmpty this.props.template)}} template={ {{~escape this.props.template~}} }{{/unless}}
      {{~#unless (isNil props.parallelRoutes)}} parallelRoutes={ {{~parallelRoutesProps props.parallelRoutes~}} }{{/unless~}}
      {{~#unless (isNilorPreset this.props.layout)}}>{ {{~lazyImport this.props.layout~}} }</RootLayoutRouteElement>{{else}}/>{{/unless~}}
  ), 
  errorElement: <RootErrorElement{{#unless (isNilorEmpty this.props.notFound)}} notFound={ {{~escape this.props.notFound~}} }{{/unless}}/>
  {{#unless (isNilorEmpty this.children)}},
  children: [{{> childrenRoutes routes=this.children}}]
  {{~/unless~}}
},
{{/each}}], normalizeCreateRouterOptions({{{basename}}}));

export default router;
